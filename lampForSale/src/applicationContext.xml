<?xml version="1.0" encoding="utf-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd    
	http://www.springframework.org/schema/tx   
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd   
	http://www.directwebremoting.org/schema/spring-dwr        
	http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd 
	http://www.springframework.org/schema/aop   
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-2.5.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.lamp" />
	<dwr:configuration />
	<!-- spring容器中检查拥有@RemoteProxy 和 @RemoteMethod注解的类 -->
	<dwr:annotation-config id="dwr_config" />
	<!-- 扫描需要转换的java对象 -->
	<dwr:annotation-scan scanRemoteProxy="true" base-package="com.lamp" />

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<!-- 指定连接数据库的URL -->
		<property name="url"
			value="jdbc:sqlserver://localhost:1433;databaseName=lampForSale" />
		<!-- 指定连接数据库的用户名 -->
		<property name="username" value="asd" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="asd" />

		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdle" value="20" />
	</bean>

	<!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- 依赖注入数据源，注入上面定义的dataSource -->
		<property name="dataSource" ref="dataSource" />
		<!-- mappingResouces属性用来列出全部映射文件 -->

		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<props>
				<!-- 指定数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect</prop>
				<!-- 是否根据需要每次自动创建数据库 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 显示Hibernate持久化操作所生成的SQL -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 将SQL脚本进行格式化后再输出 -->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.lamp.model</value>
			</list>
		</property>

	</bean>

	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 配置HibernateTransactionManager时需要依注入SessionFactory的引用 -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 配置事务切面Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<!--<tx:method name="get*" read-only="true"/>-->
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配指定包下所有以Impl结尾的类执行的所有方法 -->
		<aop:pointcut id="myService"
			expression="execution(* com.lamp.service.*Service.*(..))" />
		<!-- 指定在myService切入点应用txAdvice事务切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myService" />
		<!--
		-->
	</aop:config>

</beans>

